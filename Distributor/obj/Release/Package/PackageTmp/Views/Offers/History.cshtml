@using Distributor.Extenstions;
@using Distributor.Enums;

@model IEnumerable<Distributor.ViewModels.OfferManageView>

@{
    var offerId = Guid.Empty;
    var saveButton = "";
    var offerQuantityField = "";
    var counterOfferQuantityField = "";
    var currentAppUserId = User.Identity.GetAppUserId();
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function acceptButtonClick(id) {
            var thisOfferId = id.substr(12, 43);
            if (window.confirm("Accept this offer?")) {
                var url = "/Offers/AcceptOffer";

                $.ajax({
                    url: url,
                    data: { offerId: thisOfferId },
                    cache: false,
                    type: "POST",
                    success: function (result) {
                        location.reload(true);
                    }
                });
            }
        }

        function rejectButtonClick(id) {
            var thisOfferId = id.substr(12, 43);
            if (window.confirm("Reject this offer?")) {
                var url = "/Offers/RejectOffer";

                $.ajax({
                    url: url,
                    data: { offerId: thisOfferId },
                    cache: false,
                    type: "POST",
                    success: function (result) {
                        location.reload(true);
                    }
                });
            }
        }

        function setOfferField(id) {
            var thisOfferId = id.substr(13, 36);
            var offerQuantityFieldId = "offerquantityfield" + thisOfferId;
            var saveButtonId = "savebutton" + thisOfferId;
            var acceptButtonId = "acceptbutton" + thisOfferId;
            var rejectButtonId = "rejectbutton" + thisOfferId;

            $("#" + offerQuantityFieldId).prop("disabled", false);
            $("#" + saveButtonId).show();
            $("#" + acceptButtonId).prop("disabled", true);
            $("#" + rejectButtonId).prop("disabled", true);
        }

        function setCounterOfferField(id) {
            var thisOfferId = id.substr(13, 36);
            var offerQuantityFieldId = "counterofferquantityfield" + thisOfferId;
            var saveButtonId = "savebutton" + thisOfferId;
            var acceptButtonId = "acceptbutton" + thisOfferId;
            var rejectButtonId = "rejectbutton" + thisOfferId;

            $("#" + offerQuantityFieldId).prop("disabled", false);
            $("#" + saveButtonId).show();
            $("#" + acceptButtonId).prop("disabled", true);
            $("#" + rejectButtonId).prop("disabled", true);
        }

        function saveOfferField(id) {
            var thisId = id.substr(10, 41);
            var offerQuantityFieldId = "offerquantityfield" + thisId;
            var offerQty = $("#" + offerQuantityFieldId).val();
            if (window.confirm("Submit this new offer?")) {
                var url = "/Offers/SubmitNewOffer";

                $.ajax({
                    url: url,
                    data: { offerId: thisId, offerQuantity: offerQty },
                    cache: false,
                    type: "POST",
                    success: function (result) {
                        location.reload(true);
                    }
                });
            }
        }

        function saveCounterOfferField(id) {
            var thisId = id.substr(10, 41);
            var offerQuantityFieldId = "counterofferquantityfield" + thisId;
            var offerQty = $("#" + offerQuantityFieldId).val();
            if (window.confirm("Submit this counter offer?")) {
                var url = "/Offers/SubmitCounterOffer";

                $.ajax({
                    url: url,
                    data: { offerId: thisId, offerQuantity: offerQty },
                    cache: false,
                    type: "POST",
                    success: function (result) {
                        location.reload(true);
                    }
                });
            }
        }
    </script>
}

<nav class="navbar navbar-fixed-top">
    <div class="navbar-inverse">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Distributor", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <nav class="navbar navbar-default">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @*<a class="navbar-brand" href="#">Brand</a>*@
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li class="disabled">@Html.ActionLink("MANAGE LISTINGS", "General", "Home")</li>
                    <li>@Html.ActionLink("Requests", "Requirements", "ManageListings")</li>
                    <li>@Html.ActionLink("Available", "Available", "ManageListings")</li>
                    <li>@Html.ActionLink("Campaigns", "Campaigns", "ManageListings")</li>
                    <li class="active">@Html.ActionLink("Offers", "Offers", "ManageListings")</li>
                    <li>@Html.ActionLink("Orders", "Orders", "ManageListings")</li>
                </ul>
            </div><!-- /.navbar-collapse -->
        </div><!-- /.container -->
    </nav>
</nav>

<div class="row" style="padding-top:55px">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">Manage Listings <small>Offers History</small></h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("Offers", "Offers", "ManageListings")</li>
            <li class="active">Offers History</li>
        </ol>
        <p class="lead">Your historical requirement listing offers.</p>
    </div>
</div>

<div class="table-responsive">
    @if (ViewBag.RequiredCount == null || ViewBag.RequiredCount == 0)
    {
        <p>No details to show</p>
    }
    else
    {
        <table class="table table-hover">
            <tr class="info">
                <th>@Html.DisplayNameFor(model => model.OfferDetails.OfferStatus)</th>
                <th>Offer qty</th>
                <th></th>
                <th>Counter offer qty</th>
                <th></th>
                <th>Previous offer qty</th>
                <th>UoM</th>
                <th>Description</th>
            </tr>

            @foreach (var item in Model)
            {
                if (item.OfferDetails.ListingType == GeneralEnums.ListingTypeEnum.Requirement)
                {
                    offerId = item.OfferDetails.OfferId;

                    if (item.InhouseOffer)
                    {
                        <tr id=@offerId class="warning">
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.OfferStatus)</td>
                            <td>@Html.TextBoxFor(modelItem => item.OfferDetails.CurrentOfferQuantity, new { id = @offerQuantityField, disabled = "disabled" })</td>
                            <td><input type="button" value="Save" class="btn btn-sm btn-primary btn-block buttondetails" id=@saveButton onclick="saveOfferField(id)" style="display:none" /></td>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.CounterOfferQuantity)</td>
                            <td></td>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.PreviousOfferQuantity)</td>
                            @if (item.AvailableListingDetails != null)
                            {
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.AvailableListingDetails.UoM)</td>
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.AvailableListingDetails.ItemDescription)</td>
                            }
                            @if (item.RequirementListingDetails != null)
                            {
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.RequirementListingDetails.UoM)</td>
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.RequirementListingDetails.ItemDescription)</td>
                            }
                        </tr>
                    }
                    else
                    {
                        <tr id=@offerId>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.OfferStatus)</td>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.CurrentOfferQuantity)</td>
                            <td></td>
                            <td>@Html.TextBoxFor(modelItem => item.OfferDetails.CounterOfferQuantity, new { id = @counterOfferQuantityField, disabled = "disabled" })</td>
                            <td><input type="button" value="Save" class="btn btn-sm btn-primary btn-block buttondetails" id=@saveButton onclick="saveCounterOfferField(id)" style="display:none" /></td>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.PreviousOfferQuantity)</td>
                            @if (item.AvailableListingDetails != null)
                            {
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.AvailableListingDetails.UoM)</td>
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.AvailableListingDetails.ItemDescription)</td>
                            }
                            @if (item.RequirementListingDetails != null)
                            {
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.RequirementListingDetails.UoM)</td>
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.RequirementListingDetails.ItemDescription)</td>
                            }
                        </tr>
                    }
                }
            }
        </table>
    }
</div>

<div class="row">
    <div class="col-lg-12">
        <p class="lead">Your historical available listing offers.</p>
    </div>
</div>

<div class="table-responsive">
    @if (ViewBag.AvailableCount == null || ViewBag.AvailableCount == 0)
    {
        <p>No details to show</p>
    }
    else
    {
        <table class="table table-hover">
            <tr class="info">
                <th>@Html.DisplayNameFor(model => model.OfferDetails.OfferStatus)</th>
                <th>Offer qty</th>
                <th></th>
                <th>Counter offer qty</th>
                <th></th>
                <th>Previous offer qty</th>
                <th>UoM</th>
                <th>Description</th>
            </tr>

            @foreach (var item in Model)
            {
                if (item.OfferDetails.ListingType == GeneralEnums.ListingTypeEnum.Available)
                {
                    offerId = item.OfferDetails.OfferId;

                    if (item.InhouseOffer)
                    {
                        <tr id=@offerId class="warning">
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.OfferStatus)</td>
                            <td>@Html.TextBoxFor(modelItem => item.OfferDetails.CurrentOfferQuantity, new { id = @offerQuantityField, disabled = "disabled" })</td>
                            <td><input type="button" value="Save" class="btn btn-sm btn-primary btn-block buttondetails" id=@saveButton onclick="saveOfferField(id)" style="display:none" /></td>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.CounterOfferQuantity)</td>
                            <td></td>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.PreviousOfferQuantity)</td>
                            @if (item.AvailableListingDetails != null)
                            {
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.AvailableListingDetails.UoM)</td>
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.AvailableListingDetails.ItemDescription)</td>
                            }
                            @if (item.RequirementListingDetails != null)
                            {
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.RequirementListingDetails.UoM)</td>
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.RequirementListingDetails.ItemDescription)</td>
                            }
                        </tr>
                    }
                    else
                    {
                        <tr id=@offerId>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.OfferStatus)</td>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.CurrentOfferQuantity)</td>
                            <td></td>
                            <td>@Html.TextBoxFor(modelItem => item.OfferDetails.CounterOfferQuantity, new { id = @counterOfferQuantityField, disabled = "disabled" })</td>
                            <td><input type="button" value="Save" class="btn btn-sm btn-primary btn-block buttondetails" id=@saveButton onclick="saveCounterOfferField(id)" style="display:none" /></td>
                            <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.OfferDetails.PreviousOfferQuantity)</td>
                            @if (item.AvailableListingDetails != null)
                            {
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.AvailableListingDetails.UoM)</td>
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.AvailableListingDetails.ItemDescription)</td>
                            }
                            @if (item.RequirementListingDetails != null)
                            {
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.RequirementListingDetails.UoM)</td>
                                <td onclick="location.href='@Url.Action("Details", "Offers", new { offerId = offerId, showHistory = true })'">@Html.DisplayFor(modelItem => item.RequirementListingDetails.ItemDescription)</td>
                            }
                        </tr>
                    }
                }
            }
        </table>
    }
</div>