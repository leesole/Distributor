@using Distributor.Extenstions;
@using Distributor.Enums;

@model IEnumerable<Distributor.ViewModels.OrderManageView>

@{
    var orderId = Guid.Empty;
    var despatchedButton = "";
    var deliveredButton = "";
    var receivedButton = "";
    var collectedButton = "";
    var closedButton = "";
    var currentAppUserId = User.Identity.GetAppUserId();
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="http://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>

    <script type="text/javascript">
        //Render tables
        $(document).ready(function () {
            $('#requiredOrdersTable').dataTable();
            $('#availableOrdersTable').dataTable();
        });

        function buttonClick(id, type) {
            var thisOfferId = id.substr(12, 43);
            if (window.confirm(type + " selected.  Proceed?")) {
                var url = "/Orders/ChangeOrderStatus";

                $.ajax({
                    url: url,
                    data: { orderId: id, orderStatus: type },
                    cache: false,
                    type: "POST",
                    success: function (result) {
                        location.reload(true);
                    }
                });
            }
        }
    </script>
}

<nav class="navbar navbar-fixed-top">
    <div class="navbar-inverse">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Distributor", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <nav class="navbar navbar-default">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @*<a class="navbar-brand" href="#">Brand</a>*@
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li class="disabled">@Html.ActionLink("MANAGE LISTINGS", "General", "Home")</li>
                    <li>@Html.ActionLink("Requests", "Requirements", "ManageListings")</li>
                    <li>@Html.ActionLink("Available", "Available", "ManageListings")</li>
                    <li>@Html.ActionLink("Campaigns", "Campaigns", "ManageListings")</li>
                    <li>@Html.ActionLink("Offers", "Offers", "ManageListings")</li>
                    <li class="active">@Html.ActionLink("Orders", "Orders", "ManageListings")</li>
                </ul>
            </div><!-- /.navbar-collapse -->
        </div><!-- /.container -->
    </nav>
</nav>

<div class="row" style="padding-top:55px">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">Manage Listings <small>Orders</small></h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li class="active">Orders</li>
        </ol>
        <p class="lead">Your current orders out.</p>
    </div>
</div>

<div class="table-responsive">
    @if (ViewBag.OutOrderCount == null || ViewBag.OutOrderCount == 0)
    {
        <p>No details to show</p>
    }
    else
    {
        <table id="requiredOrdersTable" class="table table-hover">
            <thead>
                <tr class="info">
                    <th style="min-width:150px">Actions</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderQuanity)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderStatus)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderCreationDateTime)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderDistributionDateTime)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderDeliveredDateTime)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderCollectedDateTime)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderClosedDateTime)</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    if (item.OrderOut)
                    {
                        orderId = item.OrderDetails.OrderId;
                        despatchedButton = "despatchedbutton" + orderId.ToString();
                        deliveredButton = "deliveredbutton" + orderId.ToString();
                        closedButton = "closedbutton" + orderId.ToString();

                        <tr id=@orderId>
                            @if (item.OrderDetails.OrderStatus == OrderEnums.OrderStatusEnum.New)
                            {
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        @if (item.DisplayDespatchButton.Value)
                                        {
                                            <button type="submit" class="btn btn-success" id=@orderId onclick="buttonClick(id, 'Despatched')"><span class="glyphicon glyphicon-ok"></span> Despatched</button>
                                        }
                                        @if (item.DisplayDeliveredButton.Value)
                                        {
                                            <button type="submit" class="btn btn-success" id=@orderId onclick="buttonClick(id, 'Delivered')"><span class="glyphicon glyphicon-ok"></span> Delivered</button>
                                        }
                                        @if (item.DisplayClosedButton.Value)
                                        {
                                            <button type="submit" class="btn btn-danger" id=@orderId onclick="buttonClick(id, 'Closed')"><span class="glyphicon glyphicon-remove"></span> Closed</button>
                                        }
                                    </div>
                                </td>
                            }
                            else if (item.OrderDetails.OrderStatus == OrderEnums.OrderStatusEnum.Despatched)
                            {
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        @if (item.DisplayDeliveredButton.Value)
                                        {
                                            <button type="submit" class="btn btn-success" id=@orderId onclick="buttonClick(id, 'Delivered')"><span class="glyphicon glyphicon-ok"></span> Delivered</button>
                                        }
                                        @if (item.DisplayClosedButton.Value)
                                        {
                                            <button type="submit" class="btn btn-danger" id=@orderId onclick="buttonClick(id, 'Closed')"><span class="glyphicon glyphicon-remove"></span> Closed</button>
                                        }
                                    </div>
                                </td>
                            }
                            else if (item.OrderDetails.OrderStatus == OrderEnums.OrderStatusEnum.Delivered)
                            {
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        @if (item.DisplayClosedButton.Value)
                                        {
                                            <button type="submit" class="btn btn-danger" id=@orderId onclick="buttonClick(id, 'Closed')"><span class="glyphicon glyphicon-remove"></span> Closed</button>
                                        }
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td></td>
                            }

                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderQuanity)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderStatus)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderCreationDateTime)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderDistributionDateTime)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderDeliveredDateTime)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderCollectedDateTime)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderClosedDateTime)</td>
                        </tr>
                    }

                }
            </tbody>
        </table>
    }
</div>

<div class="row">
    <div class="col-lg-12">
        <p class="lead">Your current orders in.</p>
    </div>
</div>

<div class="table-responsive">
    @if (ViewBag.InOrderCount == null || ViewBag.InOrderCount == 0)
    {
        <p>No details to show</p>
    }
    else
    {
        <table id="availableOrdersTable" class="table table-hover">
            <thead>
                <tr class="info">
                    <th style="min-width:150px">Actions</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderQuanity)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderStatus)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderCreationDateTime)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderDistributionDateTime)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderDeliveredDateTime)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderCollectedDateTime)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDetails.OrderClosedDateTime)</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    if (item.OrderOut == false)
                    {
                        orderId = item.OrderDetails.OrderId;
                        collectedButton = "collectedbutton" + orderId.ToString();
                        receivedButton = "receivedbutton" + orderId.ToString();
                        closedButton = "closedbutton" + orderId.ToString();

                        <tr id=@orderId>
                            @if (item.OrderDetails.OrderStatus == OrderEnums.OrderStatusEnum.New)
                            {
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        @if (item.DisplayReceivedButton.Value)
                                        {
                                            <button type="submit" class="btn btn-xs btn-success" id=@orderId onclick="buttonClick(id, 'Received')"><span class="glyphicon glyphicon-ok"></span> Received</button>
                                        }
                                        @if (item.DisplayCollectedButton.Value)
                                        {
                                            <button type="submit" class="btn btn-xs btn-success" id=@orderId onclick="buttonClick(id, 'Collected')"><span class="glyphicon glyphicon-ok"></span> Collected</button>
                                        }
                                        @if (item.DisplayClosedButton.Value)
                                        {
                                            <button type="submit" class="btn btn-xs btn-danger" id=@orderId onclick="buttonClick(id, 'Closed')"><span class="glyphicon glyphicon-remove"></span> Closed</button>
                                        }
                                    </div>
                                </td>
                            }
                            else if (item.OrderDetails.OrderStatus == OrderEnums.OrderStatusEnum.Received || item.OrderDetails.OrderStatus == OrderEnums.OrderStatusEnum.Collected)
                            {
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        @if (item.DisplayClosedButton.Value)
                                        {
                                            <button type="submit" class="btn btn-xs btn-danger" id=@orderId onclick="buttonClick(id, 'Closed')"><span class="glyphicon glyphicon-remove"></span> Closed</button>
                                        }
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td></td>
                            }

                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderQuanity)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderStatus)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderCreationDateTime)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderDistributionDateTime)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderDeliveredDateTime)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderCollectedDateTime)</td>
                            <td onclick="location.href='@Url.Action("Details", "Orders", new { id = item.OrderDetails.OrderId, showHistory = false })'">@Html.DisplayFor(modelItem => item.OrderDetails.OrderClosedDateTime)</td>
                        </tr>
                    }

                }
            </tbody>
        </table>
    }
</div>

<div class="form-group">
    @Html.ActionLink("Display history", "History", "Orders", "", new { @class = "btn btn-default" })
</div>