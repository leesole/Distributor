@using Distributor.Extenstions;

@model IEnumerable<Distributor.ViewModels.OfferManageView>

@{ 
    var currentAppUserId = User.Identity.GetAppUserId();
}

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @*<a class="navbar-brand" href="#">Brand</a>*@
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li class="disabled">@Html.ActionLink("MANAGE LISTINGS", "General", "Home")</li>
                <li>@Html.ActionLink("Requests", "Requirements", "ManageListings")</li>
                <li>@Html.ActionLink("Available", "Available", "ManageListings")</li>
                <li>@Html.ActionLink("Campaigns", "Campaigns", "ManageListings")</li>
                <li class="active">@Html.ActionLink("Offers", "Offers", "ManageListings")</li>
                <li>@Html.ActionLink("Orders", "Orders", "ManageListings")</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">Manage Listings <small>Offers</small></h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li class="active">Offers</li>
        </ol>
        <p class="lead">Your current offers.</p>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-hover">
        <tr class="info">
            <th>@Html.DisplayNameFor(model => model.OfferDetails.ListingType)</th>
            <th>@Html.DisplayNameFor(model => model.OfferDetails.OfferStatus)</th>
            <th>@Html.DisplayNameFor(model => model.OfferDetails.CurrentOfferQuantity)</th>
            <th>@Html.DisplayNameFor(model => model.OfferDetails.CounterOfferQuantity)</th>
            <th>@Html.DisplayNameFor(model => model.OfferDetails.PreviousOfferQuantity)</th>
            <th>Unit of measure</th>
            <th>Description</th>
        </tr>

        @if (Model == null)
        {
           <tr>No details to show</tr>
        }
        else
        {
            foreach (var item in Model)
            {
                if (item.OfferDetails.OfferOriginatorAppUserId.ToString() == currentAppUserId)
                {
                    <tr class="warning">
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.ListingType)</td>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.OfferStatus)</td>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.CurrentOfferQuantity)</td>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.CounterOfferQuantity)</td>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.PreviousOfferQuantity)</td>
                        @if (item.AvailableListingDetails != null)
                        {
                            <td>@Html.DisplayFor(modelItem => item.AvailableListingDetails.UoM)</td>
                            <td>@Html.DisplayFor(modelItem => item.AvailableListingDetails.ItemDescription)</td>
                        }
                        @if (item.RequirementListingDetails != null)
                        {
                            <td>@Html.DisplayFor(modelItem => item.RequirementListingDetails.UoM)</td>
                            <td>@Html.DisplayFor(modelItem => item.RequirementListingDetails.ItemDescription)</td>
                        }
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.ListingType)</td>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.OfferStatus)</td>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.CurrentOfferQuantity)</td>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.CounterOfferQuantity)</td>
                        <td>@Html.DisplayFor(modelItem => item.OfferDetails.PreviousOfferQuantity)</td>
                        @if (item.AvailableListingDetails != null)
                        {
                            <td>@Html.DisplayFor(modelItem => item.AvailableListingDetails.UoM)</td>
                            <td>@Html.DisplayFor(modelItem => item.AvailableListingDetails.ItemDescription)</td>
                        }
                        @if (item.RequirementListingDetails != null)
                        {
                            <td>@Html.DisplayFor(modelItem => item.RequirementListingDetails.UoM)</td>
                            <td>@Html.DisplayFor(modelItem => item.RequirementListingDetails.ItemDescription)</td>
                        }
                    </tr>
                }
            }
        }
    </table>
</div>

@*<div class="form-group">
    @Html.ActionLink("Create campaign", "Create", "Campaigns", "", new { @class = "btn btn-primary" })
</div>*@
