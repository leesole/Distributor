@using Distributor.Extenstions;

@model Distributor.ViewModels.GroupAddView

@{
    var currentAppUserId = User.Identity.GetAppUserId();
    var rowId = Guid.Empty;
}

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    @Scripts.Render("~/css/vendor")

    <script type="text/javascript">
        //This will hide/display company details depending if the company has been selected or not
        function GetUserList() {
            var userTable = document.getElementById("usertable");
            userTable.style.display = "block";

            var url = "/Data/GetUserList";

            $.ajax({
                url: url,
                data: {  },
                cache: false,
                type: "POST",
                success: function (data) {
                    //$('#usertablelist').append(data.html);
                    for (var i in data) {
                        alert(data[i].users.AppUserId.toString());
                    }
                },
                error: function (response) {
                    alert("error : " + response);
                }
            });
        };

        function GetListForType(typeDropDownValueId, calledFromFormLoad) {
            var typeDropDownValue = $("#typedropdown option:selected").text();
            switch (typeDropDownValue) {
                case "Company":
                    GetCompanyList();
                    break;
                case "Branch":
                    GetBranchList();
                    break;
                case "User":
                    GetUserList();
                    break;
            }
        };
                
        $(document).ready(function () {
            var typeDropDownValueId = $("#typedropdown option:selected").val();
            var typeDropDownValue = $("#typedropdown option:selected").text();
            GetListForType(typeDropDownValueId, true);  //set to true as this is called when form loads
        });
    </script>
}




<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">
            Add group
            <small></small>
        </h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("User changes", "Edit", "AppUsers", new { id = currentAppUserId }, "")</li>
            <li>@Html.ActionLink("Your groups", "Index", "Groups")</li>
            <li class="active">Add group</li>
        </ol>
    </div>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="row">
        <div class="col-md-6">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <h4>Group details</h4>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })</div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*NOTE: The if statement to stop a field being changeable if it comes from the buttons and details are pre-loaded*@
                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })</div>
                    <div class="col-md-8">
                        @if (Model.scratchEntry)
                        {
                            @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control", @id = "typedropdown", onchange = "javascipt:GetListForType(this.value);" })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.Type, new { htmlAttributes = new { @class = "form-control", @id = "typedropdown" } })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <h4>Add members</h4>
            <div id="usertable" style="display:none">
                <div class="table-responsive">
                    <table class="table table-hover" id="usertablelist">
                        <tr class="info">
                            <th>Select</th>
                            <th>User name</th>
                            <th></th>
                        </tr>
                    </table>
                </div>
            </div>
            <div id="branchtable" style="display:none">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <tr class="info">
                            <th>Select</th>
                            <th>Branch name</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div id="companytable" style="display:none">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <tr class="info">
                            <th>Select</th>
                            <th>Company name</th>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-success" />
    </div>
}
