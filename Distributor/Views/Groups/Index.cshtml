@using Distributor.Extenstions;

@model Distributor.ViewModels.GroupEditView

@{
    var currentAppUserId = User.Identity.GetAppUserId();
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(function () {
            //show/hide branch details to edit
            $('.showhidemembers').click(function () {
                $(this).closest('tbody').next('tbody').toggle();
            });
        });
    </script>
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">
            Your groups
            <small></small>
        </h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("User changes", "Edit", "AppUsers", new { id = currentAppUserId }, "")</li>
            <li class="active">Your groups</li>
        </ol>
    </div>
</div>

<h4>Your groups</h4>
@if (Model.GroupListViewsCreatedByUser == null || Model.GroupListViewsCreatedByUser.Count == 0)
{
    <p>No groups to show</p>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover">
            <tr class="info">
                <th></th>
                <th>Group name</th>
                <th>Type</th>
                <th>Visibility</th>
                <th>Invite</th>
                <th>Acceptance</th>
                <th>Owner</th>
            </tr>
            @for (int i = 0; i < Model.GroupListViewsCreatedByUser.Count; i++)
            {
                <tr>
                    <td><input style="width:70px" type="button" value="Members" class="btn btn-sm btn-primary btn-block showhidemembers" /></td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsCreatedByUser[i].Group.Name)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsCreatedByUser[i].Group.Type)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsCreatedByUser[i].Group.VisibilityLevel)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsCreatedByUser[i].Group.InviteLevel)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsCreatedByUser[i].Group.AcceptanceLevel)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsCreatedByUser[i].Group.GroupOriginatorAppUserId)</td>
                </tr>
                <tbody id="byuserbody" style="display:none">
                    <tr class="info">
                        <th></th>
                        <th>Members</th>
                        <th>ReferenceId</th>
                        <th>Type</th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                    @for (int z = 0; z < Model.GroupListViewsCreatedByUser[i].Members.Count; z++)
                    {
                        <tr>
                            <td></td>
                            <td></td>
                            <td>@Html.DisplayFor(modelItem => Model.GroupListViewsCreatedByUser[i].Members[z].ReferenceId)</td>
                            <td>@Html.DisplayFor(modelItem => Model.GroupListViewsCreatedByUser[i].Members[z].Type)</td>
                            <td></td>
                            <td></td>
                            <td></td>
                    </tr>
                    }
                </tbody>
            }
        </table>
    </div>
}

<h4>Groups you are included in</h4>
@if (Model.GroupListViewsRelevantToUser == null || Model.GroupListViewsRelevantToUser.Count == 0)
{
    <p>No groups to show</p>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover">
            <tr class="info">
                <th></th>
                <th>Group name</th>
                <th>Type</th>
                <th>Visibility</th>
                <th>Invite</th>
                <th>Acceptance</th>
                <th>Owner</th>
            </tr>
            @for (int i = 0; i < Model.GroupListViewsRelevantToUser.Count; i++)
            {
                <tr>
                    <td><input style="width:70px" type="button" value="Members" class="btn btn-sm btn-primary btn-block showhidemembers" /></td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsRelevantToUser[i].Group.Name)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsRelevantToUser[i].Group.Type)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsRelevantToUser[i].Group.VisibilityLevel)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsRelevantToUser[i].Group.InviteLevel)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsRelevantToUser[i].Group.AcceptanceLevel)</td>
                    <td>@Html.DisplayFor(modelItem => Model.GroupListViewsRelevantToUser[i].Group.GroupOriginatorAppUserId)</td>
                </tr>
                <tbody id="byuserbody" style="display:none">
                    <tr class="info">
                        <th></th>
                        <th>Members</th>
                        <th>ReferenceId</th>
                        <th>Type</th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                    @for (int z = 0; z < Model.GroupListViewsRelevantToUser[i].Members.Count; z++)
                    {
                        <tr>
                            <td></td>
                            <td></td>
                            <td>@Html.DisplayFor(modelItem => Model.GroupListViewsRelevantToUser[i].Members[z].ReferenceId)</td>
                            <td>@Html.DisplayFor(modelItem => Model.GroupListViewsRelevantToUser[i].Members[z].Type)</td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    }
                </tbody>
            }
        </table>
    </div>
}

<div class="form-group">
    <input type="button" value="Add group" class="btn btn-primary" onclick="location.href='@Url.Action("Create", "Groups", new { appUserId = currentAppUserId })'" />
</div>
