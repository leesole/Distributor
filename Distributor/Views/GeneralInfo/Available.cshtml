@using Distributor.Extenstions;

@model IEnumerable<Distributor.ViewModels.AvailableListingGeneralInfoView>

@{
    var listingId = Guid.Empty;
    var offerButton = "";
    var saveButton = "";
    var offerQuantityField = "";
    var offerQuanity = 0.00M;
    var currentAppUserId = User.Identity.GetAppUserId().ToString();
    var appUserId = "";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(function () {
            //show/hide offer details to edit
            $('.showhideofferdetails').click(function () {
                var id = $(this).closest('tr').attr('id');
                var offerButtonId = "offerbutton" + id.toString();
                var saveButtonId = "savebutton" + id.toString();
                var offerQuantityFieldId = "offerquantityfield" + id.toString();
                if ($("#" + offerButtonId).prop("disabled") == false) {
                    $("#" + offerButtonId).prop("disabled", true);
                    $("#" + saveButtonId).prop("disabled", false);
                    $("#" + offerQuantityFieldId).prop("disabled", false);
                } else if ($("#" + saveButtonId).prop("disabled") == false && $("#" + offerQuantityFieldId).val() > 0) {
                    var offerQty = $("#" + offerQuantityFieldId).val();
                    if (window.confirm("Submit this offer?")) {
                        var url = "/AvailableListings/SubmitAvailableOffer";

                        $.ajax({
                            url: url,
                            data: { listingId: id, offerQuantity: offerQty },
                            cache: false,
                            type: "POST",
                            success: function (result) {
                                location.reload(true);
                            }
                        });
                    }
                }
            });
        });
    </script>
}

<nav class="navbar navbar-fixed-top">
    <div class="navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Distributor", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @*<a class="navbar-brand" href="#">Brand</a>*@
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li class="disabled">@Html.ActionLink("GENERAL INFO", "General", "Home")</li>
                    <li>@Html.ActionLink("Requests", "Requirements", "GeneralInfo")</li>
                    <li class="active">@Html.ActionLink("Available", "Available", "GeneralInfo")</li>
                    <li>@Html.ActionLink("Campaigns", "Campaigns", "GeneralInfo")</li>
                </ul>
            </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
    </nav>
</nav>

<div class="row" style="padding-top:55px">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">General Info <small>Available</small></h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li class="active">Available</li>
        </ol>
        <p class="lead">Current availability.</p>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-hover">
        <tr class="info">
            <th colspan="3">Actions</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.ItemDescription)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.ItemType)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.QuantityOutstanding)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.UoM)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.AvailableFrom)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.AvailableTo)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.ItemCondition)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.DeliveryAvailable)</th>
        </tr>

        @foreach (var item in Model)
        {
            listingId = item.AvailableListing.ListingId;
            offerButton = "offerbutton" + listingId.ToString();
            saveButton = "savebutton" + listingId.ToString();
            offerQuantityField = "offerquantityfield" + listingId.ToString();
            offerQuanity = item.OfferQuantity;
            appUserId = item.AvailableListing.ListingOriginatorAppUserId.ToString();

            <tr id=@listingId>
                @if (offerQuanity == 0 && appUserId != currentAppUserId)
                {
                    <td><input type="button" value="Offer" class="btn btn-sm btn-primary btn-block showhideofferdetails" id=@offerButton /></td>
                }
                else
                {
                    <td><input type="button" value="Offer" class="btn btn-sm btn-primary btn-block showhideofferdetails" id=@offerButton disabled /></td>
                }
                <td>@Html.TextBoxFor(modelItem => item.OfferQuantity, new { id = @offerQuantityField, disabled = "disabled", style = "width:70px" })</td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'"><input type="button" value="Save" class="btn btn-sm btn-success btn-block showhideofferdetails" id=@saveButton disabled /></td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'">@Html.DisplayFor(modelItem => item.AvailableListing.ItemDescription)</td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'">@Html.DisplayFor(modelItem => item.AvailableListing.ItemType)</td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'">@Html.DisplayFor(modelItem => item.AvailableListing.QuantityOutstanding)</td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'">@Html.DisplayFor(modelItem => item.AvailableListing.UoM)</td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'">@Html.DisplayFor(modelItem => item.AvailableListing.AvailableFrom)</td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'">@Html.DisplayFor(modelItem => item.AvailableListing.AvailableTo)</td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'">@Html.DisplayFor(modelItem => item.AvailableListing.ItemCondition)</td>
                <td onclick="location.href='@Url.Action("Details", "AvailableListings", new { id = item.AvailableListing.ListingId })'">@Html.DisplayFor(modelItem => item.AvailableListing.DeliveryAvailable)</td>
            </tr>
        }

    </table>
</div>

<div class="form-group">
    @Html.ActionLink("Create listing", "Create", "AvailableListings", "", new { @class = "btn btn-primary" })
</div>