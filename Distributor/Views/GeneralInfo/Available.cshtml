@model IEnumerable<Distributor.ViewModels.AvailableListingGeneralInfoView>

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @*<a class="navbar-brand" href="#">Brand</a>*@
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li class="disabled">@Html.ActionLink("GENERAL INFO", "General", "Home")</li>
                <li>@Html.ActionLink("Requests", "Requirements", "GeneralInfo")</li>
                <li class="active">@Html.ActionLink("Available", "Available", "GeneralInfo")</li>
                <li>@Html.ActionLink("Campaigns", "Campaigns", "GeneralInfo")</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">General Info <small>Requests</small></h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li class="active">Available</li>
        </ol>
        <p class="lead">Current availability.</p>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-hover">
        <tr class="info">
            <th>@Html.DisplayNameFor(model => model.AvailableListing.ItemDescription)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.ItemType)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.QuantityOutstanding)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.UoM)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.AvailableFrom)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.AvailableTo)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.ItemCondition)</th>
            <th>@Html.DisplayNameFor(model => model.AvailableListing.CollectionAvailable)</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.AvailableListing.ItemDescription)</td>
                <td>@Html.DisplayFor(modelItem => item.AvailableListing.ItemType)</td>
                <td>@Html.DisplayFor(modelItem => item.AvailableListing.QuantityOutstanding)</td>
                <td>@Html.DisplayFor(modelItem => item.AvailableListing.UoM)</td>
                <td>@Html.DisplayFor(modelItem => item.AvailableListing.AvailableFrom)</td>
                <td>@Html.DisplayFor(modelItem => item.AvailableListing.AvailableTo)</td>
                <td>@Html.DisplayFor(modelItem => item.AvailableListing.ItemCondition)</td>
                <td>@Html.DisplayFor(modelItem => item.AvailableListing.CollectionAvailable)</td>
            </tr>
        }

    </table>
</div>

<div class="form-group">
    @Html.ActionLink("Create listing", "Create", "AvailableListings", "", new { @class = "btn btn-primary" })
</div>