@using Microsoft.AspNet.Identity
@using Distributor.Extenstions

@model Distributor.ViewModels.AppUserEditView

@{
    var userRole = User.Identity.GetCurrentUserRole();
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">
            User changes
            <small></small>
        </h1>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Home", "Index", "Home")
            </li>
            <li class="active">User changes</li>
        </ol>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.AppUserId)
            @Html.HiddenFor(model => model.AppUserSettingsId)
            @Html.HiddenFor(model => model.CallingAction)
            @Html.HiddenFor(model => model.CallingController)

            <div class="col-md-4">
                <div class="login-panel panel panel-info">
                    <div class="panel-heading">
                        <h3 class="panel-title">User details</h3>
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SelectedBranchId, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.SelectedBranchId, (SelectList)ViewBag.BranchList, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SelectedBranchId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.UserRole, (SelectList)ViewBag.UserRoleList, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EntityStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.EntityStatus, (SelectList)ViewBag.EntityStatusList, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EntityStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>   
                
                <div class="login-panel panel panel-info">
                    <div class="panel-heading">
                        <h3 class="panel-title">Manage listings settings</h3>
                    </div>
                    <div class="panel-body">
                        <h4>Campaign settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CampaignManageViewInternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.CampaignManageViewInternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CampaignManageViewInternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <h4>Required listing settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RequiredListingManageViewInternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.RequiredListingManageViewInternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequiredListingManageViewInternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <h4>Available listing settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AvailableListingManageViewInternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.AvailableListingManageViewInternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AvailableListingManageViewInternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <h4>Offer settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OffersManageViewInternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.OffersManageViewInternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OffersManageViewInternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <h4>Order settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrdersManageViewInternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.OrdersManageViewInternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OrdersManageViewInternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="login-panel panel panel-info">
                    <div class="panel-heading">
                        <h3 class="panel-title">General info settings</h3>
                    </div>
                    <div class="panel-body">
                        <h4>Campaign settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CampaignGeneralInfoMaxDistance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CampaignGeneralInfoMaxDistance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CampaignGeneralInfoMaxDistance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CampaignGeneralInfoExternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.CampaignGeneralInfoExternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CampaignGeneralInfoExternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <h4>Required listing settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RequiredListingGeneralInfoMaxDistance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.RequiredListingGeneralInfoMaxDistance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequiredListingGeneralInfoMaxDistance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RequiredListingGeneralInfoExternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.RequiredListingGeneralInfoExternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequiredListingGeneralInfoExternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <h4>Available listing settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AvailableListingGeneralInfoMaxDistance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.AvailableListingGeneralInfoMaxDistance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AvailableListingGeneralInfoMaxDistance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AvailableListingGeneralInfoExternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.AvailableListingGeneralInfoExternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AvailableListingGeneralInfoExternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="login-panel panel panel-info">
                    <div class="panel-heading">
                        <h3 class="panel-title">Dashboard settings</h3>
                    </div>
                    <div class="panel-body">
                        <h4>Campaign settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CampaignDashboardMaxDistance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CampaignDashboardMaxDistance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CampaignDashboardMaxDistance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CampaignDashboardMaxAge, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CampaignDashboardMaxAge, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CampaignDashboardMaxAge, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CampaignDashboardExternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.CampaignDashboardExternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CampaignDashboardExternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <h4>Required listing settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RequiredListingDashboardMaxDistance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.RequiredListingDashboardMaxDistance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequiredListingDashboardMaxDistance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RequiredListingDashboardMaxAge, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.RequiredListingDashboardMaxAge, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequiredListingDashboardMaxAge, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RequiredListingDashboardExternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.RequiredListingDashboardExternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequiredListingDashboardExternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <h4>Available listing settings</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AvailableListingDashboardMaxDistance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.AvailableListingDashboardMaxDistance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AvailableListingDashboardMaxDistance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AvailableListingDashboardMaxAge, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.AvailableListingDashboardMaxAge, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AvailableListingDashboardMaxAge, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AvailableListingDashboardExternalSelectionLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => model.AvailableListingDashboardExternalSelectionLevel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AvailableListingDashboardExternalSelectionLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Submit" name="submitbutton" class="btn btn-success" />
        <input type="submit" value="Reset" name="resetbutton" class="btn btn-danger" />
    </div>
}
