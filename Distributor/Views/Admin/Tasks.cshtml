@using Microsoft.AspNet.Identity
@using Distributor.Extenstions
@using Distributor.Helpers

@model IEnumerable<Distributor.ViewModels.UserTaskView>

@{
    var userRole = User.Identity.GetCurrentUserRole();
    var taskTypeDescription = "";
    var referenceDescription = "";
}

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @*<a class="navbar-brand" href="#">Brand</a>*@
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li class="active">@Html.ActionLink("Tasks", "Tasks", "Admin")</li>
                <li>@Html.ActionLink("User Admin", "UserAdmin", "Admin")</li>
                <li>@Html.ActionLink("Branch Admin", "BranchAdmin", "Admin")</li>
                @if (userRole == "Admin" || userRole == "SuperUser")
                {
                    <li>@Html.ActionLink("Company Admin", "CompanyAdmin", "Admin")</li>
                }
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">@userRole <small>Tasks</small></h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li class="active">Tasks</li>
        </ol>
        <p class="lead">Your current active tasks.</p>
        <div class="table-responsive">
            <table class="table table-hover">
                <tr class="info">
                    <th colspan="2">Actions</th>
                    <th>Task type</th>
                    <th>Description</th>
                    <th>Reference details</th>
                    <th>Created</th>
                    <th>Created by</th>
                </tr>

                @foreach (var item in Model)
                {
                    taskTypeDescription = EnumHelpers.GetDescription(item.TaskType);
                    if (item.AppUserReference != null)
                    {
                        referenceDescription = item.AppUserReference.FirstName + " " + item.AppUserReference.LastName;
                    }
                    if (item.BranchReference != null)
                    {
                        referenceDescription = item.BranchReference.BranchName + ", " + item.BranchReference.AddressLine1 + ", " + item.BranchReference.AddressTownCity;
                    }

                    <tr id=@item.UserTaskId>
                        <td>
                            <input type="button" value="Approve" class="btn btn-sm btn-success btn-block confirmapprove" />
                        </td>
                        <td>
                            <input type="button" value="Cancel" class="btn btn-sm btn-danger btn-block confirmcancel" />
                        </td>
                        <td onclick="location.href='@Url.Action("Details", "Task", new { userTaskId = item.UserTaskId })'">
                            @taskTypeDescription
                        </td>
                        <td onclick="location.href='@Url.Action("Details", "Task", new { userTaskId = item.UserTaskId })'">
                            @Html.DisplayFor(modelItem => item.TaskDescription)
                        </td>
                        <td onclick="location.href='@Url.Action("Details", "Task", new { userTaskId = item.UserTaskId })'">
                            @referenceDescription
                        </td>
                        <td onclick="location.href='@Url.Action("Details", "Task", new { userTaskId = item.UserTaskId })'">
                            @Html.DisplayFor(modelItem => item.CreatedOn)
                        </td>
                        <td onclick="location.href='@Url.Action("Details", "Task", new { userTaskId = item.UserTaskId })'">
                            @(item.CreatedBy.FirstName + " " + item.CreatedBy.LastName)
                        </td>
                    </tr>
                }

            </table>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(function () {
            //confirm the approve of tasks
            $('.confirmapprove').click(function (e) {
                trid = $(this).closest('tr').attr('id');
                if (window.confirm("Are you sure?")) {
                    var url = "/Task/ApproveTask";

                    $.ajax({
                        url: url,
                        data: { userTaskId: trid },
                        cache: false,
                        type: "POST",
                        success: function (result) {
                            location.reload(true);
                        }
                    });
                }
            });
        });

        $(function () {
            //confirm the cancel of tasks
            $('.confirmcancel').click(function (e) {
                if (window.confirm("Are you sure?")) {
                    var url = "/Task/CancelTask";

                    $.ajax({
                        url: url,
                        data: { userTaskId: trid },
                        cache: false,
                        type: "POST",
                        success: function (result) {
                            location.reload(true);
                        }
                    });
                }
            });
        });

    </script>
}