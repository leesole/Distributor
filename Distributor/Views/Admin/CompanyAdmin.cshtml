@using Microsoft.AspNet.Identity
@using Distributor.Extenstions

@model Distributor.ViewModels.CompanyAdminView

@{
    var userRole = User.Identity.GetCurrentUserRole();
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        //update the hiddenfield of HeadOfficeBranchId with the value of the branchId of checked office in list
        function holdCurrentHeadOffice(id) {
            $("#headofficebranch").val(id);
        }

    </script>
}

<nav class="navbar navbar-fixed-top">
    <div class="navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Distributor", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @*<a class="navbar-brand" href="#">Brand</a>*@
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li class="disabled">@Html.ActionLink("ADMIN", "Tasks", "Admin")</li>
                    <li>@Html.ActionLink("Tasks", "Tasks", "Admin")</li>
                    <li>@Html.ActionLink("User Admin", "UserAdmin", "Admin")</li>
                    <li>@Html.ActionLink("Branch Admin", "BranchAdmin", "Admin")</li>
                    <li class="active">@Html.ActionLink("Company Admin", "CompanyAdmin", "Admin")</li>
                </ul>
            </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
    </nav>
</nav>

<div class="row" style="padding-top:55px">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin: 10px 0px 10px">@userRole <small>Company Administration</small></h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li class="active">Company Admin</li>
        </ol>
        <p class="lead">Your current company details.</p>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CompanyDetails.CompanyId)
        @Html.HiddenFor(model => model.CompanyDetails.HeadOfficeBranchId, new { id="headofficebranch" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyDetails.CompanyName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanyDetails.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyDetails.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyDetails.CompanyRegistrationDetails, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanyDetails.CompanyRegistrationDetails, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyDetails.CompanyRegistrationDetails, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyDetails.AllowBranchTrading, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.CheckBoxFor(model => model.CompanyDetails.AllowBranchTrading, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CompanyDetails.AllowBranchTrading, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyDetails.CharityRegistrationDetails, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanyDetails.CharityRegistrationDetails, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyDetails.CharityRegistrationDetails, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyDetails.EntityStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => model.CompanyDetails.EntityStatus, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CompanyDetails.EntityStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyDetails.VATRegistrationDetails, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanyDetails.VATRegistrationDetails, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyDetails.VATRegistrationDetails, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Table for the list of branches  -->
    <div class="row">
        <div class="col-lg-12">
            <h2><small>Associated branch details.</small></h2>
            <div class="table-responsive">
                <table class="table table-hover">
                    <tr class="info">
                        <th>Head office</th>
                        <th>Branch name</th>
                        <th colspan="4">Address</th>
                        <th>Business type</th>
                        <th>Status</th>
                    </tr>

                    @foreach (var branch in Model.RelatedBranches)
                    {
                        @Html.HiddenFor(model => branch.BranchId)
                        <tr>
                            <td>
                                @if (branch.EntityStatus != Distributor.Enums.EntityEnums.EntityStatusEnum.Active)
                                { }
                                else
                                {
                                    if (branch.BranchId == Model.CompanyDetails.HeadOfficeBranchId)
                                    {
                                    @Html.RadioButton("headoffice", "", new { id = branch.BranchId, @onclick = "holdCurrentHeadOffice(id)" })
                                    }
                                    else
                                    {
                                    @Html.RadioButton("headoffice", "1", new { id = branch.BranchId, @onclick = "holdCurrentHeadOffice(id)" })
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelBranch => branch.BranchName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelBranch => branch.AddressLine1)
                            </td>
                            <td>
                                @Html.DisplayFor(modelBranch => branch.AddressTownCity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelBranch => branch.AddressCounty)
                            </td>
                            <td>
                                @Html.DisplayFor(modelBranch => branch.AddressPostcode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelBranch => branch.BusinessType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelBranch => branch.EntityStatus)
                            </td>
                        </tr>
                    }
                </table>
            </div>

            <div class="form-group">
                <input type="submit" value="Submit" name="submitbutton" class="btn btn-success" />
                <input type="submit" value="Reset" name="resetbutton" class="btn btn-danger" />
            </div>

        </div>
    </div>
}