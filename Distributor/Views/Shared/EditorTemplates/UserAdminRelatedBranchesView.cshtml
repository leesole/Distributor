@model Distributor.ViewModels.UserAdminRelatedBranchesView

@{ 
    var branchAddress = Model.AddressLine1 + ", " + Model.AddressTownCity + ", " + Model.AddressPostcode; ;
    string appUserId = ViewBag.AppUserId.ToString();
    var currentBranchId = ViewBag.CurrentBranchId;
    var branchId = Model.BranchId;
    var combinedId = appUserId + ":" + branchId;
}

@Html.HiddenFor(modelBranch => modelBranch.AppUserId)
@Html.HiddenFor(modelBranch => modelBranch.BranchId)
@Html.HiddenFor(modelBranch => modelBranch.BranchUserId)
@Html.HiddenFor(modelBranch => modelBranch.BranchName)
@Html.HiddenFor(modelBranch => modelBranch.AddressLine1)
@Html.HiddenFor(modelBranch => modelBranch.AddressTownCity)
@Html.HiddenFor(modelBranch => modelBranch.AddressPostcode)

<tr id=@branchId>
    <td></td>
    <td id=@branchId>
        @if (Model.CurrentBranch)
        {
            <input type="radio" name=@appUserId id=@branchId checked onchange="currentBranchOnChange(this.name, this.id);" />
        }
        else
        {
            <input type="radio" name=@appUserId id=@branchId onchange="currentBranchOnChange(this.name, this.id);" />
        }

    </td>
    <td>@Html.EnumDropDownListFor(modelBranch => modelBranch.UserRole, "", new { @class = "form-control", @id = @combinedId, onchange = "javascipt:roleChange(this.value, this.id, this.name);"})</td>
    <td>@Html.DisplayFor(modelBranch => modelBranch.BranchName)</td>
    <td>@branchAddress;</td>
</tr>